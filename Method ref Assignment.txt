package nikhil;

/*
 * 1) define a functional interface "First" with an abstract method
 * "void disp1()". define a class "Second" with a method "void fun1()"
 *inside main function create a method reference for "First" and invoke "fun1" of "Second"
 */
interface First
{
	void disp1();
}
class Second
{
	void fun1()
	{
		System.out.println("in Class second fun1");
	}
}
public class Demo
{
	public static void main(String[] args) 
	{
		Second s1=new Second();
		First ref=s1::fun1;
		ref.disp1();
	}
}


package nikhil;

/*
 * 2) define a functional interface "Third" with an abstract method
 * "void show(int num)". define a class "Sample" with a method
 * "void disp(int num)"
 * 
 * inside main function create a method reference for "Third" and invoke "disp"
 * of "Sample" by passing a value "500".
 */

interface Third
{
	void show(int num);
}
class Sample
{
	void disp(int num)
	{
		System.out.println("in disp\t"+num);
	}
}
public class Demo
{
	public static void main(String[] args) 
	{
		Third t1=(new Sample())::disp;
		t1.show(500);
    }
}



package nikhil;

/*
 * 3) define a functional interface "Fifth" with an abstract method
 * "int add(int a,int b)" define a class Math1 with a method
 * "int calc(int a,int b)"
 * 
 * inside main function invoke "calc" method with the help of a) lamdba
 * expression b) method reference
 */

interface Fifth
{
	int Add(int a,int b);
}
class Math1
{
	int calc(int a,int b)
	{
		return a+b;
	}
}
public class Demo
{
	public static void main(String[] args) {
		
	Math1 M1=new Math1();
	Fifth f1=(a,b)->{  return M1.calc(a,b);};
	Fifth f2=M1::calc;
	System.out.println(f1.Add(10,20));
	System.out.println(f2.Add(30,40));
	}
}



package nikhil;

/*
 * 4) define a functional interface "Sixth" with an abstract method
 * "void disp5()". define a class "Sample" with a static method "void fun1()"
 * 
 * inside main function create a method reference for "Sixth" and invoke "fun1"
 * of "Sample"
 */

interface Sixth
{
	void disp5();
}
class Sample
{
	static void fun1()
	{
		System.out.println("in fun1");
	}
}
public class Demo
{
	public static void main(String[] args)
	{
		Sixth s1=Sample::fun1;
		s1.disp5();
	}
}





