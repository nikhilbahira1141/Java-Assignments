package nnnn;

import java.io.*;

/*
 * 3) Define a class "Student" with private int rollno and private String name
 * and private int age; setters and getters
 * 
 * create 2 objects of Student and write them inside filesystem and thereafter
 * read both the objects and display.
 */

class Student implements Serializable
{
	private int roolno;
	private String name;
	private int age;
	
	public Student(int roolno, String name, int age) {
		super();
		this.roolno = roolno;
		this.name = name;
		this.age = age;
	}

	public int getRoolno() {
		return roolno;
	}

	public String getName() {
		return name;
	}

	public int getAge() {
		return age;
	}
	
	@Override
	public String toString() {
		return "Student [roolno=" + roolno + ", name=" + name + ", age=" + age + "]";
	}
}

public class Demo
{
	public static void main(String[] args) 
	{
		Student S1=new Student(49,"Nikhil",23);
		Student S2=new Student(11,"amisha",23);
		
		try 
		{
			FileOutputStream fos=new FileOutputStream("D:\\ForClient\\Object3.txt");
			ObjectOutputStream oos=new ObjectOutputStream(fos);
			
			oos.writeObject(S1);
			oos.writeObject(S2);
			oos.close();
			oos.close();
			FileInputStream fis=new FileInputStream("D:\\ForClient\\Object3.txt");
			ObjectInputStream ois=new ObjectInputStream(fis);
			
			Student S3=(Student)ois.readObject();
			Student S4=(Student)ois.readObject();
			
			System.out.println(S3);
			System.out.println(S4);
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}
		
				
	}
}


package nnnn;

import java.io.*;

/*
 * 4) create two classes
 * Engine
 *
 *		private int speed
 *		private String type
 *			setters and getter
 *	Car
 *		private Engine engine;
 *	private String modelname;
 *			setters and getters
 */

class Engine implements Serializable
{
	private int speed;
	private String type;
	
	public Engine(int speed, String type) 
	{
		super();
		this.speed = speed;
		this.type = type;
	}
	public int getSpeed() 
	{
		return speed;
	}
	public String getType() 
	{
		return type;
	}
	@Override
	public String toString() {
		return "Engine [speed=" + speed + ", type=" + type + "]";
	}
	
}
class Car implements Serializable
{
	private Engine engine;
	private String modelname;
	
	public Car(String modelname) {
		super();
		this.modelname = modelname;
	}
	public void setEngine(Engine engine) {
		this.engine = engine;
	}
	public Engine getEngine() {
		return engine;
	}
	public String getModelname() {
		return modelname;
	}
	@Override
	public String toString() {
		return "Car [engine=" + engine + ", modelname=" + modelname + "]";
	}
	
}

public class Demo
{
	public static void main(String[] args) 
	{
		Car c1=new Car("TATA");
		c1.setEngine(new Engine(140,"sport"));
		
		try 
		{
			FileOutputStream fos=new FileOutputStream("D:\\ForClient\\Object4.txt");
			ObjectOutputStream oos=new ObjectOutputStream(fos);
			
			oos.writeObject(c1);
			c1=null;
			
			FileInputStream fis=new FileInputStream("D:\\ForClient\\Object4.txt");
			ObjectInputStream ois=new ObjectInputStream(fis);
			
			Car c2=(Car)ois.readObject();
			System.out.println(c2);
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}
	}
}



